# uruchamia HomeKit gdy zwave gotowe
- id: start_homekit
  alias: 'Start HomeKit'
  trigger:
    platform: event
    event_type: zwave.network_ready
  action:
    service: homekit.start

#### GAMES #######################################################################################
# początek grania
- id: start_games
  alias: 'Start Games'
  trigger:
    platform: state
    entity_id: binary_sensor.gaming
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.gaming_timer
    state: 'off'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.gaming_timer
    - service: input_number.set_value
      data_template:
        entity_id: input_number.gaming_end_hours
        value: '{{ now().strftime("%H") }}'
    - service: input_number.set_value
      data_template:
        entity_id: input_number.gaming_end_minutes
        value: '{{ now().strftime("%M") }}'

# koniec grania
- id: end_games
  alias: 'End Games'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (now().strftime("%H") | int) == (states.input_number.gaming_end_hours.state | int + 1)}}'
      - condition: template
        value_template: '{{ (now().strftime("%M") | int) == (states.input_number.gaming_end_minutes.state | int) }}'
      - condition: state
        entity_id: input_boolean.gaming_timer
        state: 'on'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.gaming_timer
    - condition: state
      entity_id: binary_sensor.gaming
      state: 'on'
    - service: notify.html5_oneplus
      data:
        title: 'Zbyt długa gra'
        message: 'Gra trwa już godzinę. Pora skończyć!'
        data:
          tag: 'notification-gaming-end'
    - service: notify.ios_edyta_iphone
      data:
        title: 'Zbyt długa gra'
        message: 'Gra trwa już godzinę. Pora skończyć!'
    - service: notify.androidtv
      data:
        title: 'Zbyt długa gra'
        message: 'Gra trwa już godzinę. Pora skończyć!'
##################################################################################################

#### ENERGY CONSUMPTION ##########################################################################
# resetowanie miesięcznego zużycia energii
- id: energy_reset_monthly_consumption
  alias: 'Energy Reset Monthly Consumption'
  trigger:
    platform: time
    hours: 0
    minutes: 0
    seconds: 0
  condition:
    condition: template
    value_template: "{{ now().date().day == 1 }}"
  action:
    - service: zwave.reset_node_meters
      data: {"node_id":13,"instance":1}
    - service: zwave.reset_node_meters
      data: {"node_id":13,"instance":2}
##################################################################################################

#### PURGE RECORDER DATABASE #####################################################################
- id: purge_recorder_database
  alias: 'Purge Recorder Database'
  trigger:
    platform: time
    hours: 3
    minutes: 0
    seconds: 0
  action:
    service: recorder.purge
    data: {"keep_days":4}
##################################################################################################

#### NOTIFICATIONS ###############################################################################
# powiadomienie o wygasającym certyfikacie SSL
- id: notification_ssl_cert_expiry
  alias: 'Notification SSL Cert Expiry'
  trigger:
    platform: template
    value_template: "{{ (states.sensor.ssl_certificate_expiry.state | int == 30) or (states.sensor.ssl_certificate_expiry.state | int == 20) or (states.sensor.ssl_certificate_expiry.state | int == 10) }}"
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Wygasa certyfikat SSL'
      message: "Za {{ states.sensor.ssl_certificate_expiry.state }} dni wygaśnie certyfikat SSL serwera WWW."
    data:
      data:
        tag: 'notification-ssl-cert'

# powiadomienie o błędzie inicjalizacji Z-Wave
- id: notification_zwave_dead
  alias: 'Notification Z-Wave Dead'
  trigger:
    platform: template
    value_template: >
       {% macro zwave_dead() %}
          {% for item in states.zwave %}
             {%- if (item.state != 'ready') and (item.state != 'sleeping') and (item.state != 'initializing') %}{% if not loop.first and not loop.last %}, {% endif %}{% if loop.last %}, {% endif %}{{ item.entity_id }}{% endif -%}
          {% endfor %}
       {% endmacro %}
       {{ zwave_dead() | trim != '' }}
  condition:
    condition: numeric_state
    entity_id: sensor.home_assistant_uptime
    above: 3
  action:
    service: notify.html5
    data_template:
      title: 'Błąd urządzenia Z-Wave'
      message: >
         {% macro zwave_dead() %}
            {% for item in states.zwave %}
               {%- if (item.state != 'ready') and (item.state != 'sleeping') and (item.state != 'initializing') %}{% if not loop.first and not loop.last %}, {% endif %}{% if loop.last %}, {% endif %}{{ item.entity_id }}{% endif -%}
            {% endfor %}
         {% endmacro %}
         Wystąpił błąd urządzenia Z-Wave {{ zwave_dead() | trim }}. Wymagany restart Home Assistant'a.
      data:
        tag: 'notification-zwave-error'

# powiadomienie o aktualizacji
- id: notification_custom_update_available
  alias: 'Notification Custom Update Available'
  trigger:
    platform: template
    value_template: "{{ states.sensor.ha_version_current.state != states.sensor.ha_version_installed.state }}"
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Aktualizacja Home Assistant'
      message: "Dostępna jest aktualizacja do wersji {{ states.sensor.ha_version_current.state }} dla Home Assistant."
    data:
      data:
        tag: 'notification-hass-update'
        url: "https://home-assistant.io/blog/"

# powiadomienie o aktualizacji Sonoffów
- id: notification_sonoff_update_available
  alias: 'Notification Sonoff Update Available'
  trigger:
    platform: state
    entity_id: sensor.sonoff_version_current
  action:
    - service: script.sonoffs_check_version
    - condition: or
      conditions:
        - condition: template
          value_template: '{{ states.sensor.sonoff_basic_01_version.state != states.sensor.sonoff_version_current.state }}'
        - condition: template
          value_template: '{{ states.sensor.sonoff_basic_02_version.state != states.sensor.sonoff_version_current.state }}'
    - service: notify.html5_oneplus
      data_template:
        title: 'Aktualizacja Sonoff-Tasmota'
        message: "Dostępna jest aktualizacja do wersji {{ states.sensor.sonoff_version_current.state }} dla Sonoff-Tasmota."
      data:
        data:
          tag: 'notification-sonoff-update'
          url: "https://github.com/arendst/Sonoff-Tasmota/releases"


# powiadomienie jak jest ruch i nikogo w domu
- id: notification_motion_when_away_mode
  alias: 'Notification Motion When Away Mode'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_antresola
        - binary_sensor.motion_salon
        - binary_sensor.motion_sypialnia
        - binary_sensor.motion_antek
      from: 'off'
      to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.away_mode
    state: 'on'
    for:
      minutes: 10
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Wykryto ruch w pustym mieszkaniu'
      message: "Wykryto ruch w pomieszczeniu: {{ trigger.to_state.attributes.location }} o godzinie {{ now().strftime('%H:%M') }}."
    data:
      data:
        tag: 'notification-hass-motion'

# powiadomienie jak otworzy się okno i nikogo w domu
- id: notification_window_opened_when_away_mode
  alias: 'Notification Window Opened When Away Mode'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.balcony_door_sypialnia
        - binary_sensor.window_kuchnia
        - binary_sensor.balcony_door_pracownia
      from: 'off'
      to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.away_mode
    state: 'on'
    for:
      minutes: 10
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Wykryto otwarcie okna w pustym mieszkaniu'
      message: "Wykryto otwarcie okna w pomieszczeniu: {{ trigger.to_state.attributes.location }} o godzinie {{ now().strftime('%H:%M') }}."
    data:
      data:
        tag: 'notification-hass-window-opened'

# powiadomienie o dostępnej aktualizacji dla routera
- id: notification_router_update_available
  alias: 'Notification Router Update Available'
  trigger:
    platform: state
    entity_id: sensor.router_update
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Nowa wersja oprogramowania routera'
      message: "Dostępna jest aktualizacja oprogramowania routera do wersji {{ trigger.to_state.state }}."
    data:
      data:
        tag: 'notification-router-update'
        url: "https://asuswrt.lostrealm.ca/changelog"

# powiadomienia o małej ilości miejsca na Synology
- id: notification_low_disk_space_on_synology
  alias: 'Notification Low Disk Space On Synology'
  trigger:
    platform: numeric_state
    entity_id: sensor.synology_disk_used
    above: 70
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Mało miejsca na sysku Synology'
      message: "Dysk Synology jest zajęty w {{ trigger.to_state.state }}%."
    data:
      data:
        tag: 'notification-synology-low-disk'
        url: !secret synology_http

# powiadomienie o wykryciu nowego urządzenia
- id: notification_new_device
  alias: 'Notification New Device'
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Nowe urządzenie'
      message: "Wykryto nowe urządzenie o nazwie {{trigger.event.data.host_name}} ({{trigger.event.data.entity_id}})."
    data:
      data:
        tag: 'notification-new-device'

# powiadomienie o niskim poziomie naładowania baterii
- id: notification_low_battery
  alias: 'Notification Low Battery'
  trigger:
    platform: time
    at: '18:00:00'
  condition:
    condition: template
    value_template: >
       {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['light', 'switch', 'sensor', 'zwave', 'lock', 'binary_sensor'] %}
          {% for domain in domains -%}
             {% for item in states[domain] if (((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")))) and not (( "humidity" in item.entity_id) or ("illumination" in item.entity_id)) -%}
                {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) -%}
                   {{ item.name }} ({{ item.attributes['battery_level'] }}){%- if not loop.last %}, {% endif -%}{% endif -%}
                {% if "battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
                   {{ item.name }} ({{ item.state }}){% if not loop.last %}, {%- endif %} {% endif -%}
             {% endfor %}
          {%- endfor %}
       {% endmacro %}
       {{ battery_level() |trim != "" }}
  action:
    service: notify.html5_oneplus
    data_template:
      title: 'Niski poziom naładowania baterii'
      message: >
         {% macro battery_level() %}
            {%- set threshold = 20 -%}
            {%- set domains = ['light', 'switch', 'sensor', 'zwave', 'lock', 'binary_sensor'] -%}
            {% for domain in domains -%}
               {% for item in states[domain] if (((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown")))) and not (( "humidity" in item.entity_id) or ("illumination" in item.entity_id)) -%}
                 {% if (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) -%}
                    {{ item.entity_id }} [{{ item.attributes['battery_level'] | round(0) }}%]{%- if not loop.last %}, {% endif -%}{% endif -%}
                 {% if "battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
                    {{ item.entity_id }} [{{ item.state | round(0) }}%]{% if not loop.last %}, {%- endif %} {% endif -%}
               {% endfor %}
            {%- endfor %}
         {% endmacro %}
         W następujących urządzeniach jest niski poziom naładowania baterii: {{ battery_level() }}
      data:
        tag: 'notification-low-battery'
##################################################################################################

#### OBECNOŚĆ ####################################################################################
# Goście w domu
- id: guests_at_home
  alias: 'Guests At Home'
  trigger:
    platform: state
    entity_id: group.guests
    to: 'home'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.guests

# Gościa poza domem
- id: no_guests_at_home
  alias: 'No Guests At Home'
  trigger:
    platform: state
    entity_id: group.guests
    to: 'not_home'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.guests

# Edyta 40 minut od domu
- id: presence_edyta_far_from_home
  alias: 'Presence Edyta Far From Home'
  trigger:
    platform: template
    value_template: "{{ (states.sensor.edyta_to_home.state != 'unknown') and (states.sensor.edyta_to_home.state | int > 40) }}"
  condition:
    condition: state
    entity_id: input_boolean.edyta_far_from_home
    state: 'off'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.edyta_far_from_home

# Maciek 40 minut od domu
- id: presence_maciek_far_from_home
  alias: 'Presence Maciek Far From Home'
  trigger:
    platform: template
    value_template: "{{ (states.sensor.maciek_to_home.state != 'unknown') and (states.sensor.maciek_to_home.state | int > 40) }}"
  condition:
    condition: state
    entity_id: input_boolean.maciek_far_from_home
    state: 'off'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.maciek_far_from_home

# Maciek wrócił do domu
- id: presence_maciek_come_back_home
  alias: 'Presence Maciek Come Back Home'
  trigger:
    platform: state
    entity_id: sensor.maciek_presence
    to: 'w domu'
  condition:
    condition: state
    entity_id: input_boolean.maciek_far_from_home
    state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.maciek_far_from_home

# Edyta wróciła do domu
- id: presence_edyta_come_back_home
  alias: 'Presence Edyta Come Back Home'
  trigger:
    platform: state
    entity_id: sensor.edyta_presence
    to: 'w domu'
  condition:
    condition: state
    entity_id: input_boolean.edyta_far_from_home
    state: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.edyta_far_from_home

# domownicy poza domem
- id: presence_peoples_away
  alias: 'Presence Peoples Away'
  trigger:
    platform: state
    entity_id: binary_sensor.people_at_home
    to: 'off'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.away_mode
    - condition: state
      entity_id: group.windows
      state: 'on'
    - service: notify.html5_oneplus
      data:
        title: 'Otwarte okno'
        message: 'W mieszkaniu przynajmniej jedno okno jest otwarte!'
        data:
          tag: 'notification-opened-window'
    - service: notify.ios_edyta_iphone
      data:
        title: 'Otwarte okno'
        message: 'W mieszkaniu przynajmniej jedno okno jest otwarte!'

# domownicy w domu
- id: presence_peoples_back
  alias: 'Presence Peoples Back'
  trigger:
    platform: state
    entity_id: binary_sensor.people_at_home
    to: 'on'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.away_mode
##################################################################################################

#### HEATING #####################################################################################
# zwiększenie temperatury rano w tygodniu jeśli ktoś jest w domu i trwa sezon grzewczy
- id: heating_day
  alias: 'Heating Day'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ now().strftime("%H:%M") == states.input_select.heating_night_end.state }}'
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
  action:
    service: script.heating_day

# zmniejszenie temperatury na noc w tygodniu jeśli trwa sezon grzewczy
- id: heating_night
  alias: 'Heating Night'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ now().strftime("%H:%M") == states.input_select.heating_night_start.state }}'
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
  action:
    service: script.heating_night

# zwiększenie temperatury rano w weekendy jeśli ktoś jest w domu i trwa sezon grzewczy
- id: heating_day_weekend
  alias: 'Heating Day Weekend'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ now().strftime("%H:%M") == states.input_select.heating_night_end_weekend.state }}'
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'off'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
  action:
    service: script.heating_day

# zmniejszenie temperatury na noc w weekendy jeśli trwa sezon grzewczy
- id: heating_night_weekend
  alias: 'Heating Night Weekend'
  trigger:
    platform: time
    minutes: '/1'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ now().strftime("%H:%M") == states.input_select.heating_night_start_weekend.state }}'
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'off'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
  action:
    service: script.heating_night

# zmniejszenie temperatury na noc w salonie i kuchni po wyłączeniu TV
- id: heating_night_salon_and_kuchnia
  alias: 'Heating Night Salon and Kuchnia'
  trigger:
    platform: state
    entity_id: media_player.denon
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.guests
        state: 'off'
      - condition: state
        entity_id: input_boolean.heating_night
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_salon_kuchnia_night
        state: 'off'
  action:
    - service: climate.set_temperature
      entity_id: climate.thermostat_kuchnia
      data_template:
        temperature: '{{ states.input_select.heating_temp_night.state }}'

# zmniejszenie temperatury gdy domownicy wychodzą i jest sezon grzewczy
- id: heating_eco_mode
  alias: 'Heating Eco Mode'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'off'
    to: 'on'
    for:
      minutes: 10
  condition:
    condition: state
    entity_id: input_boolean.heating_season
    state: 'on'
  action:
    service: script.heating_eco_mode

# zwiększenie temperatury gdy domownicy wracają i jest sezon grzewczy
- id: heating_peoples_back
  alias: 'Heating Peoples Back'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '05:30:00'
        before: '22:00:00'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
  action:
    service: script.heating_day

- id: heating_peoples_back_night
  alias: 'Heating Peoples Back Night'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '22:00:00'
        before: '05:30:00'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
  action:
    service: script.heating_night

# włączenie ogrzewania 30 minut przed powrotem do domu w dzień gdy jest sezon grzewczy
- id: heating_turn_on_before_return_to_home
  alias: 'Heating Turn On Before Return To Home'
  trigger:
    platform: template
    value_template: "{{ ((states.sensor.maciek_to_home.state != 'unknown') and (states.sensor.edyta_to_home.state != 'unknown')) and ((states.sensor.maciek_to_home.state | int < 30) or (states.sensor.edyta_to_home.state | int < 30)) }}"
  condition:
    condition: and
    conditions:
      - condition: time
        after: '05:30:00'
        before: '23:00:00'
      - condition: state
        entity_id: input_boolean.edyta_far_from_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.maciek_far_from_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'on'
      - condition: state
        entity_id: script.heating_fast_warm_up
        state: 'off'
  action:
    - service: script.heating_day
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.edyta_far_from_home
        -  input_boolean.maciek_far_from_home

# włączenie szybkiego dogrzewania 60 minut przed powrotem do domu w dzień gdy jest sezon grzewczy gdy nieobecność domowników dłuższa niż 10 godzin
- id: heating_heating_fast_warm_up_before_return_to_home
  alias: 'Heating Fast Warm Up Before Return To Home'
  trigger:
    platform: template
    value_template: "{{ ((states.sensor.maciek_to_home.state != 'unknown') and (states.sensor.edyta_to_home.state != 'unknown')) and ((states.sensor.maciek_to_home.state | int < 30) or (states.sensor.edyta_to_home.state | int < 30)) }}"
  condition:
    condition: and
    conditions:
      - condition: time
        after: '05:30:00'
        before: '23:00:00'
      - condition: state
        entity_id: input_boolean.edyta_far_from_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.maciek_far_from_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'on'
        for:
          hours: 10
      - condition: state
        entity_id: script.heating_fast_warm_up
        state: 'off'
  action:
    - service: script.heating_fast_warm_up
    - service: input_boolean.turn_off
      entity_id:
        - input_boolean.edyta_far_from_home
        -  input_boolean.maciek_far_from_home

# początek przewietrzania
- id: heating_airing_begin
  alias: 'Heating Airing Begin'
  trigger:
    - platform: state
      entity_id: input_boolean.heating_airing
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: group.windows
      from: 'off'
      to: 'on'
      for:
        minutes: 10
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
  action:
    service: script.heating_airing_begin

# koniec przewietrzania
- id: heating_airing_end
  alias: 'Heating Airing End'
  trigger:
    - platform: state
      entity_id: input_boolean.heating_airing
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: group.windows
      from: 'on'
      to: 'off'
      for:
        minutes: 10
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.windows
        state: 'off'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: template
        value_template: "{{ (trigger.entity_id == 'group.windows' and states.input_boolean.heating_airing.state == 'on') or trigger.entity_id == 'input_boolean.heating_airing' }}"
  action:
    - service: script.heating_day
    - condition: state
      entity_id: input_boolean.heating_airing
      state: 'on'
    - service: input_boolean.turn_off
      entity_id: input_boolean.heating_airing

# koniec przewietrzania o zachodzie słońca
- id: heating_airing_end_at_sunset
  alias: 'Heating Airing End At Sunset'
  trigger:
    platform: sun
    event: sunset
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_airing
        state: 'on'
  action:
    - service: notify.ios_edyta_iphone
      data:
        title: 'Koniec przewietrzania'
        message: 'O zachodzie słońca wyłączono tryb przewietrzania. Proszę zamknąć okna!'
    - service: notify.html5_oneplus
      data:
        title: 'Koniec przewietrzania'
        message: 'O zachodzie słońca wyłączono tryb przewietrzania. Proszę zamknąć okna!'
        data:
          tag: 'notification-airing-sunset-end'
    - service: input_boolean.turn_off
      entity_id: input_boolean.heating_airing

# początek sezonu grzewczego
- id: heating_season_begin
  alias: 'Heating Season Begin'
  trigger:
    platform: state
    entity_id: input_boolean.heating_season
    from: 'off'
    to: 'on'
  action:
    service: script.heating_day

# koniec sezonu grzewczego
- id: heating_season_end
  alias: 'Heating Season End'
  trigger:
    platform: state
    entity_id: input_boolean.heating_season
    from: 'on'
    to: 'off'
  action:
    service: script.heating_season_end

# ustawia w kuchni temperaturę z salonu
- id: heating_sync_temp_salon_kuchnia
  alias: 'Heating Sync Temp Salon Kuchnia'
  trigger:
    platform: state
    entity_id: climate.thermostat_salon
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
           {% if (trigger.to_state and trigger.from_state) %}
              {{ trigger.to_state.attributes.temperature != trigger.from_state.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: >-
           {% if (trigger.to_state and states.climate.thermostat_kuchnia) %}
              {{ trigger.to_state.attributes.temperature != states.climate.thermostat_kuchnia.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: "{{ (trigger.to_state.attributes.temperature | float) != 4.3 }}"
  action:
    service: climate.set_temperature
    entity_id: climate.thermostat_kuchnia
    data_template:
      temperature: '{{ trigger.to_state.attributes.temperature }}'

# ustawia w salonie temperaturę z kuchni
- id: heating_sync_temp_kuchnia_salon
  alias: 'Heating Sync Temp Kuchnia Salon'
  trigger:
    platform: state
    entity_id: climate.thermostat_kuchnia
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >-
           {% if (trigger.to_state and trigger.from_state) %}
              {{ trigger.to_state.attributes.temperature != trigger.from_state.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: >-
           {% if (trigger.to_state and states.climate.thermostat_salon) %}
              {{ trigger.to_state.attributes.temperature != states.climate.thermostat_salon.attributes.temperature }}
           {% endif %}
      - condition: template
        value_template: "{{ (trigger.to_state.attributes.temperature | float) != 4.3 }}"
  action:
    service: climate.set_temperature
    entity_id: climate.thermostat_salon
    data_template:
      temperature: '{{ trigger.to_state.attributes.temperature }}'

# zmniejszanie nastawy termostatu do 22 stopni gdy temperatura w łazience przekroczy 22.8 stopnie
- id: heating_lazienka_target_temp_down
  alias: 'Heating Lazienka Target Temp Down'
  trigger:
    platform: numeric_state
    entity_id: sensor.temperature_lazienka
    above: 22.8
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states.climate.thermostat_lazienka.attributes.temperature | float > 22 }}'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_airing
        state: 'off'
  action:
    service: climate.set_temperature
    entity_id: climate.thermostat_lazienka
    data:
      temperature: 22

# zwiekszenie nastawy termostatu do 23 stopni gdy temperatura w łazience poniżej 22 stopni
- id: heating_lazienka_target_temp_up
  alias: 'Heating Lazienka Target Temp Up'
  trigger:
    platform: numeric_state
    entity_id: sensor.temperature_lazienka
    below: 22.2
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (states.climate.thermostat_lazienka.attributes.temperature | float < 23) and (states.climate.thermostat_lazienka.attributes.temperature | float > 20) }}'
      - condition: state
        entity_id: input_boolean.heating_season
        state: 'on'
      - condition: state
        entity_id: input_boolean.heating_airing
        state: 'off'
  action:
    service: climate.set_temperature
    entity_id: climate.thermostat_lazienka
    data:
      temperature: 23

# uruchamia skrypt aktualizaujący current temp
- id: heating_update_thermostats
  alias: 'Heating Update Thermostats'
  trigger:
    platform: state
    entity_id:
      - sensor.temperature_antek
      - sensor.temperature_salon
      - sensor.temperature_kuchnia
      - sensor.temperature_antresola
      - sensor.temperature_sypialnia
      - sensor.temperature_lazienka
      - climate.thermostat_antek
      - climate.thermostat_kuchnia
      - climate.thermostat_salon
      - climate.thermostat_antresola
      - climate.thermostat_sypialnia
      - climate.thermostat_lazienka
  condition:
    condition: template
    value_template: >-
      {% if "thermostat" in trigger.entity_id and trigger.to_state.attributes.current_temperature == none %}
         true
      {% elif "sensor" in trigger.entity_id %}
         true
      {% else %}
         false
      {% endif %}
  action:
    service: python_script.update_thermostat
    data_template:
      thermostat: >-
         {% if "thermostat" in trigger.entity_id %}
            {{ trigger.entity_id }}
         {% else %}
            climate.thermostat_{{ trigger.entity_id | replace('sensor.temperature_', '') }}
         {% endif %}
      sensor: >-
         {% if "sensor" in trigger.entity_id %}
            {{ trigger.entity_id }}
         {% else %}
            sensor.temperature_{{ (trigger.entity_id | replace('climate.thermostat_', '')) }}
         {% endif %}
      heat_state: 'auto'

# uruchamia skrypt aktualizaujący current temp na starcie HA
- id: heating_update_current_temperature_at_start
  alias: 'Heating Update Current Temperature At Start'
  trigger:
    platform: event
    event_type: zwave.network_ready
  action:
    - service: python_script.update_thermostat
      data:
        thermostat: climate.thermostat_antek
        sensor: sensor.temperature_antek
        heat_state: 'auto'
    - service: python_script.update_thermostat
      data:
        thermostat: climate.thermostat_kuchnia
        sensor: sensor.temperature_kuchnia
        heat_state: 'auto'
    - service: python_script.update_thermostat
      data:
        thermostat: climate.thermostat_salon
        sensor: sensor.temperature_salon
        heat_state: 'auto'
    - service: python_script.update_thermostat
      data:
        thermostat: climate.thermostat_antresola
        sensor: sensor.temperature_antresola
        heat_state: 'auto'
    - service: python_script.update_thermostat
      data:
        thermostat: climate.thermostat_sypialnia
        sensor: sensor.temperature_sypialnia
        heat_state: 'auto'
    - service: python_script.update_thermostat
      data:
        thermostat: climate.thermostat_lazienka
        sensor: sensor.temperature_lazienka
        heat_state: 'auto'
##################################################################################################

#### LIGHT #######################################################################################
# wyłączenie oświetlenia po wyjściu z domu
- id: light_turn_off_when_away_mode
  alias: 'Light Turn Off When Away Mode'
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'off'
    to: 'on'
    for:
      minutes: 10
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: switch.light_lamp_salon
        state: 'on'
      - condition: state
        entity_id: switch.light_leds_salon
        state: 'on'
      - condition: state
        entity_id: switch.light_bulbs_salon
        state: 'on'
      - condition: state
        entity_id: light.lightstrip_sypialnia
        state: 'on'
      - condition: state
        entity_id: light.lightstrip_antek
        state: 'on'
      - condition: state
        entity_id: light.gateway_antresola
        state: 'on'
  action:
    service: script.light_away_mode

## SALON ##
# automatyczna scena oświetlenia w salonie
- id: light_scene_salon_auto
  alias: 'Light Scene Salon Auto'
  trigger:
    - platform: state
      entity_id: input_select.light_scenes_salon
      to: 'automatyczny'
    - platform: state
      entity_id: light.bulbs_salon
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.salon_light_scene_turn_on
        state: 'off'
  action:
    - delay: '00:00:15'
    - service: switch.flux_update
    - service: input_select.select_option
      data:
        entity_id: input_select.light_scenes_salon
        option: 'automatyczny'

# wybór sceny oświetlenia w salonie gdy zarówki włączone
- id: light_scene_salon
  alias: 'Light Scene Salon'
  trigger:
    platform: state
    entity_id: input_select.light_scenes_salon
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state != 'automatyczny' }}"
      - condition: template
        value_template: "{{ (states.light.bulb_salon_1.state == 'on') and (states.light.bulb_salon_2.state == 'on') }}"
  action:
    service: scene.turn_on
    data_template:
      entity_id: scene.{{ trigger.to_state.state }}

# wybór sceny oświetlenia w salonie gdy żarówki wyłączone
- id: light_scene_salon_when_bulbs_off
  alias: 'Light Scene Salon When Bulbs Off'
  trigger:
    platform: state
    entity_id: input_select.light_scenes_salon
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state != 'automatyczny' }}"
      - condition: template
        value_template: "{{ (states.light.bulbs_salon.state == 'off') or (states.light.bulbs_salon.state == 'unavailable') }}"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.salon_light_scene_turn_on
    - service: switch.turn_on
      entity_id: switch.light_bulbs_salon

# wybór sceny auto oświetlenia w salonie gdy żarówki wyłączone
- id: light_scene_salon_auto_when_bulbs_off
  alias: 'Light Scene Salon Auto When Bulbs Off'
  trigger:
    platform: state
    entity_id: input_select.light_scenes_salon
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state == 'automatyczny' }}"
      - condition: template
        value_template: "{{ (states.light.bulbs_salon.state == 'off') or (states.light.bulbs_salon.state == 'unavailable') }}"
  action:
    service: switch.turn_on
    entity_id: switch.light_bulbs_salon

# scena gdy żarówki połączą się z siecią
- id: light_scene_salon_when_bulbs_are_turning_on
  alias: 'Light Scene Salon When Bulbs Are Turning On'
  trigger:
    platform: state
    entity_id: light.bulbs_salon
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.salon_light_scene_turn_on
    state: 'on'
  action:
    - service: scene.turn_on
      data_template:
        entity_id: scene.{{ states.input_select.light_scenes_salon.state }}
    - service: input_boolean.turn_off
      entity_id: input_boolean.salon_light_scene_turn_on

# włączenie/wyłączenie lampy w salonie
- id: light_toggle_power_salon_lamp
  alias: 'Light Toggle Power Salon Lamp'
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_light_salon_1
        click_type: single
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_light_salon_2
        click_type: single
  action:
    service: switch.toggle
    entity_id: switch.light_lamp_salon

# włączenie/wyłączenie żarówek w salonie
- id: light_toggle_power_salon_bulbs
  alias: 'Light Toggle Power Salon Bulbs'
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_light_salon_1
        click_type: double
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_light_salon_2
        click_type: double
  action:
    service: switch.toggle
    entity_id: switch.light_bulbs_salon

# włączenie/wyłączenie LEDów w salonie
- id: light_toggle_power_salon_leds
  alias: 'Light Toggle Power Salon LEDs'
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_light_salon_1
        click_type: hold
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_light_salon_2
        click_type: hold
  action:
    service: switch.toggle
    entity_id: switch.light_leds_salon

# włączanie lampy w salonie jak pojawi się ruch lub zrobi się ciemno lub wyłączone światło/TV
- id: light_turn_on_salon_lamp
  alias: 'Light Turn On Salon Lamp'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.motion_salon
        - binary_sensor.motion_antresola_2
      from: 'off'
      to: 'on'
    - platform: numeric_state
      entity_id: sensor.illumination_salon
      below: 10
    - platform: state
      entity_id: switch.light_leds_salon
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: switch.light_bulbs_salon
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: switch.light_lamp_salon
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: switch.light_leds_przedpokoj
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: media_player.denon
      to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: template
        value_template: "{{ (states.sensor.illumination_salon.state | int < 10) or (states.sensor.illumination_antresola.state | int < 60) }}"
      - condition: state
        entity_id: switch.light_leds_salon
        state: 'off'
      - condition: state
        entity_id: switch.light_bulbs_salon
        state: 'off'
      - condition: state
        entity_id: switch.light_lamp_salon
        state: 'off'
      - condition: state
        entity_id: switch.light_leds_przedpokoj
        state: 'off'
      - condition: state
        entity_id: input_boolean.guests
        state: 'off'
      - condition: state
        entity_id: media_player.denon
        state: 'off'
      - condition: state
        entity_id: binary_sensor.motion_salon
        state: 'on'
      - condition: or
        conditions:
          - condition: sun
            after: sunset
          - condition: sun
            before: sunrise
  action:
    - service: homeassistant.turn_on
      entity_id:
        - switch.light_lamp_salon
        - switch.light_leds_przedpokoj
        - input_boolean.salon_lamp_motion_on

# wyłączenie lampy w salonie jak zniknie ruch lub włączy się światła
- id: light_turn_off_salon_lamp
  alias: 'Light Turn Off Salon Lamp'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_salon
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: switch.light_leds_salon
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: switch.light_bulbs_salon
      from: 'off'
      to: 'on'
    - platform: numeric_state
      entity_id: sensor.illumination_salon
      above: 20
  condition:
    condition: state
    entity_id: input_boolean.salon_lamp_motion_on
    state: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id:
        - switch.light_lamp_salon
        - switch.light_leds_przedpokoj
        - input_boolean.salon_lamp_motion_on

# automatyczna zmiana temperatury koloru żarówek gdy wybrana scena auto
- id: light_salon_bulbs_auto_color_temp
  alias: 'Light Salon Bulbs Auto Color Temp'
  trigger:
    platform: time
    minutes: '/10'
    seconds: 0
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ (states.light.bulb_salon_1.state == 'on') and (states.light.bulb_salon_2.state == 'on') }}"
      - condition: state
        entity_id: input_select.light_scenes_salon
        state: 'automatyczny'
  action:
    service: switch.flux_update

# Scena oświetlenia salonu film po włączeniu Netflix/Showmax/Youtube/Dune/gry na PS
- id: light_scene_film
  alias: 'Light Scene Film'
  trigger:
    - platform: state
      entity_id: sensor.androidtv_activity
      to: 'Netflix'
    - platform: state
      entity_id: sensor.androidtv_activity
      to: 'ShowMax'
    - platform: state
      entity_id: sensor.androidtv_activity
      to: 'YouTube'
    - platform: state
      entity_id: sensor.dune_activity
      to: 'file_playback'
    - platform: state
      entity_id: media_player.playstation
      to: 'playing'
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunset
      - condition: template
        value_template: "{{ (states.switch.light_leds_salon.state == 'on') or (states.switch.light_bulbs_salon.state == 'on') or (states.switch.light_lamp_salon.state == 'on') }}"
      - condition: time
        after: '19:30:00'
      - condition: state
        entity_id: input_boolean.guests
        state: 'off'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.light_scenes_salon
      option: 'film'

# Scena oświetlenia salonu auto po wyłączeniu filmu
- id: light_scene_auto_after_film
  alias: 'Light Scene Auto After Film'
  trigger:
    - platform: state
      entity_id: sensor.androidtv_activity
      from: 'Netflix'
      to: 'Ekran główny'
      for:
        seconds: 30
    - platform: state
      entity_id: sensor.androidtv_activity
      from: 'ShowMax'
      to: 'Ekran główny'
      for:
        seconds: 30
    - platform: state
      entity_id: sensor.androidtv_activity
      from: 'YouTube'
      to: 'Ekran główny'
      for:
        seconds: 30
    - platform: state
      entity_id: sensor.dune_activity
      from: 'file_playback'
      to: 'navigator'
      for:
        seconds: 30
    - platform: state
      entity_id: media_player.playstation
      from: 'playing'
      to: 'idle'
      for:
        seconds: 30
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ (states.switch.light_leds_salon.state == 'on') or (states.switch.light_bulbs_salon.state == 'on') or (states.switch.light_lamp_salon.state == 'on') }}"
      - condition: state
        entity_id: input_select.light_scenes_salon
        state: 'film'
  action:
    service: input_select.select_option
    data:
      entity_id: input_select.light_scenes_salon
      option: 'automatyczny'

## ANTRESOLA ##
# włączanie lampki na antresoli jak jest ciemno i jest ruch
- id: light_turn_on_antresola_lamp
  alias: 'Light Turn On Antresola Lamp'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_antresola
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: state
        entity_id: light.gateway_antresola
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.illumination_antresola
        below: 60
      - condition: or
        conditions:
          - condition: sun
            after: sunset
          - condition: sun
            before: sunrise
  action:
    - service: light.turn_on
      entity_id: light.gateway_antresola
      data_template:
        brightness: 200
        rgb_color: ['{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}']
    - service: input_boolean.turn_on
      entity_id: input_boolean.antresola_lamp_motion_on

# wyłączanie lampki na antresoli jak brak ruchu
- id: light_turn_off_antresola_lamp
  alias: 'Light Turn Off Antresola Lamp'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_antresola
    from: 'on'
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.antresola_lamp_motion_on
    state: 'on'
  action:
    - service: homeassistant.turn_off
      entity_id:
        - light.gateway_antresola
        - input_boolean.antresola_lamp_motion_on

## SYPIALNIA ##
# włączanie LEDów w sypialni jak jest ruch i ciemno
- id: light_turn_on_sypialnia_leds_when_dark_and_motion
  alias: 'Light Turn On Sypialnia LEDs When Dark And Motion'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sypialnia
      from: 'off'
      to: 'on'
    - platform: numeric_state
      entity_id: sensor.illumination_sypialnia
      below: 3
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: state
        entity_id: light.lightstrip_sypialnia
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.illumination_sypialnia
        below: 3
      - condition: state
        entity_id: binary_sensor.motion_sypialnia
        state: 'on'
      - condition: or
        conditions:
          - condition: sun
            after: sunset
          - condition: sun
            before: sunrise
  action:
    - service: light.turn_on
      entity_id: light.lightstrip_sypialnia
      data:
        brightness: 200
        rgb_color: [233,96,255]
    - service: input_boolean.turn_on
      entity_id: input_boolean.sypialnia_lamp_motion_on

# wyłączanie LEDów w sypialni jak brak ruchu lub zrobi się jaśniej
- id: light_turn_off_sypialnia_leds
  alias: 'Light Turn Off Sypialnia LEDs'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sypialnia
      from: 'on'
      to: 'off'
    - platform: numeric_state
      entity_id: sensor.illumination_sypialnia
      above: 2
  condition:
    condition: state
    entity_id: input_boolean.sypialnia_lamp_motion_on
    state: 'on'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.sypialnia_lamp_motion_on
    - service: light.turn_off
      entity_id: light.lightstrip_sypialnia
      data:
        transition: 10

## POKÓJ ANTKA ##
# włączanie LEDów w pokoju Antka jak natężenie światła spadnie poniżej 3 i jest ruch
- id: light_turn_on_antek_leds_when_dark_and_motion
  alias: 'Light Turn On Antek LEDs When Dark And Motion'
  trigger:
    - platform: numeric_state
      entity_id: sensor.illumination_antek
      below: 3
    - platform: state
      entity_id: binary_sensor.motion_antek
      from: 'off'
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: state
        entity_id: binary_sensor.motion_antek
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.illumination_antek
        below: 3
      - condition: state
        entity_id: light.lightstrip_antek
        state: 'off'
      - condition: state
        entity_id: input_boolean.antek_lamp_night
        state: 'off'
      - condition: or
        conditions:
          - condition: sun
            after: sunset
          - condition: sun
            before: sunrise
  action:
    service: script.light_turn_on_antek_leds

# wyłączanie LEDów w pokoju Antka jak brak ruchu lub zrobi się jaśniej
- id: light_turn_off_antek_leds
  alias: 'Light Turn Off Antek LEDs'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_antek
      from: 'on'
      to: 'off'
    - platform: numeric_state
      entity_id: sensor.illumination_antek
      above: 2
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.antek_lamp_motion_on
        state: 'on'
  action:
    service: script.light_turn_off_antek_leds

# włączanie LEDów w pokoju Antka w tryb nocny
- id: light_turn_on_antek_leds_night
  alias: 'Light Turn On Antek LEDs Night'
  trigger:
    platform: event
    event_type: click
    event_data:
      entity_id: binary_sensor.switch_light_antek
      click_type: hold
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: state
        entity_id: input_boolean.antek_lamp_night
        state: 'off'
      - condition: or
        conditions:
          - condition: sun
            after: sunset
          - condition: sun
            before: sunrise
  action:
    - service: light.turn_on
      entity_id: light.lightstrip_antek
      data:
        brightness: 15
        rgb_color: [255,190,0]
    - service: input_boolean.turn_on
      entity_id: input_boolean.antek_lamp_night
    - service: input_boolean.turn_off
      entity_id: input_boolean.antek_lamp_motion_on

# wyłączanie LEDów w pokoju Antka z trybu nocnego
- id: light_turn_off_antek_leds_night
  alias: 'Light Turn Off Antek LEDs Night'
  trigger:
    platform: event
    event_type: click
    event_data:
      entity_id: binary_sensor.switch_light_antek
      click_type: hold
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.away_mode
        state: 'off'
      - condition: state
        entity_id: input_boolean.antek_lamp_night
        state: 'on'
      - condition: or
        conditions:
          - condition: sun
            after: sunset
          - condition: sun
            before: sunrise
  action:
    - service: script.light_turn_on_antek_leds
    - service: input_boolean.turn_off
      entity_id: input_boolean.antek_lamp_night

# wyłączanie LEDów w pokoju Antka jak wschód słońca
- id: light_turn_off_antek_leds_at_sunrise
  alias: 'Light Turn Off Antek LEDs At Sunrise'
  trigger:
    platform: sun
    event: sunrise
  condition:
    condition: state
    entity_id: light.lightstrip_antek
    state: 'on'
  action:
    service: script.light_turn_off_antek_leds

# włączenie/wyłączenie LEDów w pokoju Antka
- id: light_toggle_antek_leds
  alias: 'Light Toggle Antek LEDs'
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_light_antek
        click_type: single
  action:
    service: light.toggle
    entity_id: light.lightstrip_antek

# losowy kolor LEDów w pokoju Antka
- id: light_random_color_antek_leds
  alias: 'Light Random Color Antek LEDs'
  trigger:
    - platform: event
      event_type: click
      event_data:
        entity_id: binary_sensor.switch_light_antek
        click_type: double
  action:
    service: light.turn_on
    entity_id: light.lightstrip_antek
    data_template:
      brightness: 150
      rgb_color: ['{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}','{{ (range(0, 255)|random) }}']

##################################################################################################

#### HARMONY #####################################################################################
- id: harmony_turn_off_tv
  alias: 'Harmony Turn Off TV'
  trigger:
    platform: state
    entity_id: remote.salon
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.current_activity == "PowerOff" }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.harmony_command
    - service: input_select.select_option
      entity_id: input_select.salon_harmony
      data:
        option: "wyłączony"
    - service: input_boolean.turn_off
      entity_id: input_boolean.harmony_command

- id: harmony_starts_telewizja
  alias: 'Harmony Starts Telewizja'
  trigger:
    platform: state
    entity_id: remote.salon
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.current_activity == "Telewizja" }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.harmony_command
    - service: input_select.select_option
      entity_id: input_select.salon_harmony
      data:
        option: "telewizja"
    - service: input_boolean.turn_off
      entity_id: input_boolean.harmony_command

- id: harmony_starts_filmy
  alias: 'Harmony Starts Filmy'
  trigger:
    platform: state
    entity_id: remote.salon
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.current_activity == "Filmy" }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.harmony_command
    - service: input_select.select_option
      entity_id: input_select.salon_harmony
      data:
        option: "filmy"
    - service: input_boolean.turn_off
      entity_id: input_boolean.harmony_command

- id: harmony_starts_muzyka
  alias: 'Harmony Starts Muzyka'
  trigger:
    platform: state
    entity_id: remote.salon
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.current_activity == "Muzyka" }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.harmony_command
    - service: input_select.select_option
      entity_id: input_select.salon_harmony
      data:
        option: "muzyka"
    - service: input_boolean.turn_off
      entity_id: input_boolean.harmony_command

- id: harmony_starts_netflix
  alias: 'Harmony Starts Netflix'
  trigger:
    platform: state
    entity_id: remote.salon
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.current_activity == "Netflix" }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.harmony_command
    - service: input_select.select_option
      entity_id: input_select.salon_harmony
      data:
        option: "Netflix"
    - service: input_boolean.turn_off
      entity_id: input_boolean.harmony_command

- id: harmony_starts_playstation
  alias: 'Harmony Starts PlayStation'
  trigger:
    platform: state
    entity_id: remote.salon
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.current_activity == "PlayStation" }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.harmony_command
    - service: input_select.select_option
      entity_id: input_select.salon_harmony
      data:
        option: "PlayStation"
    - condition: template
      value_template: '{{ trigger.from_state.state == "PowerOff" }}'
    - service: switch.turn_on
      entity_id: switch.playstation
    - service: input_boolean.turn_off
      entity_id: input_boolean.harmony_command

- id: harmony_starts_xbox
  alias: 'Harmony Starts Xbox'
  trigger:
    platform: state
    entity_id: remote.salon
  condition:
    condition: template
    value_template: '{{ trigger.to_state.attributes.current_activity == "Xbox" }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.harmony_command
    - service: input_select.select_option
      entity_id: input_select.salon_harmony
      data:
        option: "Xbox"
    - service: input_boolean.turn_off
      entity_id: input_boolean.harmony_command

- id: hass_turn_off_tv
  alias: 'HASS Turn Off TV'
  trigger:
    platform: state
    entity_id: input_select.salon_harmony
    to: 'wyłączony'
  condition:
    condition: state
    entity_id: input_boolean.harmony_command
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.harmony_tv_off

- id: hass_starts_telewizja
  alias: 'HASS Starts Telewizja'
  trigger:
    platform: state
    entity_id: input_select.salon_harmony
    to: 'telewizja'
  condition:
    condition: state
    entity_id: input_boolean.harmony_command
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.harmony_telewizja

- id: hass_starts_filmy
  alias: 'HASS Starts Filmy'
  trigger:
    platform: state
    entity_id: input_select.salon_harmony
    to: 'filmy'
  condition:
    condition: state
    entity_id: input_boolean.harmony_command
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.harmony_filmy

- id: hass_starts_muzyka
  alias: 'HASS Starts Muzyka'
  trigger:
    platform: state
    entity_id: input_select.salon_harmony
    to: 'muzyka'
  condition:
    condition: state
    entity_id: input_boolean.harmony_command
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.harmony_muzyka

- id: hass_starts_netflix
  alias: 'HASS Starts Netflix'
  trigger:
    platform: state
    entity_id: input_select.salon_harmony
    to: 'Netflix'
  condition:
    condition: state
    entity_id: input_boolean.harmony_command
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.harmony_netflix

- id: hass_starts_playstation
  alias: 'HASS Starts PlayStation'
  trigger:
    platform: state
    entity_id: input_select.salon_harmony
    to: 'PlayStation'
  condition:
    condition: state
    entity_id: input_boolean.harmony_command
    state: 'off'
  action:
    - service: script.turn_on
      entity_id: script.harmony_playstation
    - condition: template
      value_template: '{{ trigger.from_state.state == "wyłączony" }}'
    - service: switch.turn_on
      entity_id: switch.playstation

- id: hass_starts_xbox
  alias: 'HASS Starts Xbox'
  trigger:
    platform: state
    entity_id: input_select.salon_harmony
    to: 'Xbox'
  condition:
    condition: state
    entity_id: input_boolean.harmony_command
    state: 'off'
  action:
    service: script.turn_on
    entity_id: script.harmony_xbox
##################################################################################################

#### OTHERS ######################################################################################
- id: log_level
  alias: 'Log Level'
  trigger:
    platform: state
    entity_id: input_select.log_level
  action:
    service: logger.set_level
    data_template:
      homeassistant.components: "{{ trigger.to_state.state }}"
